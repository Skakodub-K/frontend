import type { ITask } from "./task-model";

export const mockTasks: ITask[] = [
    {
        id: "7c9e6679-7425-40de-944b-12a3f8c7a4b5",
        title: "Разработать главную страницу сайта",
        description: "Сверстать и стилизовать главную страницу согласно предоставленному макету в Figma. Необходимо обеспечить кросс-браузерную совместимость, адаптивность под все популярные разрешения экранов, а также оптимизировать загрузку ресурсов. Дополнительно требуется добавить анимации для ключевых элементов интерфейса, чтобы улучшить пользовательский опыт.",
        currentProgress: 7
    },
    {
        id: "2d3e4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a",
        title: "Написать API для авторизации пользователей",
        description: "Реализовать полноценное API для регистрации, входа в систему, восстановления пароля и управления профилем. Должна быть поддержка JWT-аутентификации, валидация входных данных, защита от брутфорса и DDoS-атак. Также необходимо предусмотреть интеграцию с социальными сетями (Google, VK, Telegram) и двухфакторную аутентификацию (2FA) по SMS или email.",
        currentProgress: 4
    },
    {
        id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
        title: "Протестировать функционал корзины покупок",
        description: "Провести комплексное тестирование функционала корзины: добавление и удаление товаров, применение промокодов, расчет стоимости с учетом налогов и доставки. Необходимо проверить работу в разных сценариях: с авторизованным и гостевым пользователем, при изменении цены товара во время оформления, а также при отмене заказа. Важно убедиться, что данные синхронизируются между фронтендом и бэкендом в реальном времени.",
        currentProgress: 2
    },
    {
        id: "b5c6d7e8-f9a0-4b1c-8d2e-3f4a5b6c7d8e",
        title: "Оптимизировать загрузку изображений",
        description: "Провести аудит текущих изображений на сайте, сжать их без потери качества с помощью инструментов типа TinyPNG или ImageOptim. Реализовать lazy loading для изображений ниже сгиба экрана (below the fold), добавить поддержку форматов WebP и AVIF для современных браузеров. Также настроить CDN для быстрой доставки медиафайлов пользователям из разных регионов и добавить адаптивные изображения через тег <picture>.",
        currentProgress: 9
    },
    {
        id: "f0e1d2c3-b4a5-46c7-8d9e-0f1a2b3c4d5e",
        title: "Создать мобильную версию приложения",
        description: "Адаптировать текущий веб-интерфейс под мобильные устройства с учетом touch-взаимодействия. Уменьшить количество элементов на экране, оптимизировать навигацию, добавить жесты (свайпы, пинч-зум). Проверить работу на iOS и Android, включая различные версии ОС. Особое внимание уделить скорости загрузки и отзывчивости интерфейса на слабых устройствах при плохом интернет-соединении.",
        currentProgress: 5
    },
    {
        id: "6d5e4f3a-2b1c-40d9-8e7f-6a5b4c3d2e1f",
        title: "Настроить CI/CD pipeline",
        description: "Автоматизировать процесс сборки, тестирования и деплоя приложения на тестовые и продакшн-сервера. Настроить GitHub Actions для запуска unit- и e2e-тестов при каждом пулл-реквесте. Реализовать поэтапный деплой (canary releases) с возможностью быстрого отката. Добавить мониторинг успешности деплоев, уведомления в Slack при ошибках и интеграцию с Sentry для отслеживания багов в production.",
        currentProgress: 3
    },
    {
        id: "9a8b7c6d-5e4f-3a2b-1c0d-9e8f7a6b5c4d",
        title: "Реализовать поиск по каталогу",
        description: "Разработать умный поиск по каталогу товаров с поддержкой фильтрации по категориям, брендам, цене и рейтингу. Добавить автодополнение запросов, исправление опечаток и поиск по синонимам. Реализовать сортировку по популярности, новизне и отзывам. Для больших каталогов предусмотреть пагинацию или бесконечную подгрузку. Оптимизировать запросы к ElasticSearch или аналогичной поисковой системе, чтобы снизить нагрузку на базу данных.",
        currentProgress: 6
    },
    {
        id: "4d3e2f1a-0b9c-8d7e-6f5a-4b3c2d1e0f9a",
        title: "Исправить баги в личном кабинете",
        description: "Устранить критические и незначительные ошибки в разделе личного кабинета: проблемы с отображением истории заказов, некорректное сохранение изменений в профиле, зависание при загрузке большого количества данных. Провести рефакторинг кода, улучшить обработку ошибок и добавить лоадеры для долгих операций. Также переработать UI некоторых элементов, чтобы сделать интерфейс более интуитивным и соответствующим гайдлайнам дизайн-системы.",
        currentProgress: 1
    },
    {
        id: "1e2d3c4b-5a6f-47d8-9c0b-1a2d3e4f5a6b",
        title: "Добавить мультиязычность",
        description: "Интегрировать i18n-решение (например, i18next) для поддержки русского и английского языков. Перевести все тексты в интерфейсе, включая динамические сообщения и ошибки. Реализовать переключение языка с сохранением предпочтений пользователя. Учесть особенности разных языков: разную длину текста, право-левое написание (RTL) для арабского, множественные формы слов. Также добавить языковой выбор при первом посещении сайта на основе браузерных настроек.",
        currentProgress: 0
    },
    {
        id: "8c7d6e5f-4a3b-2c1d-0e9f-8a7b6c5d4e3f",
        title: "Провести нагрузочное тестирование",
        description: "С помощью инструментов типа JMeter или Locust протестировать производительность системы под высокой нагрузкой. Проверить, как ведет себя сервер при 1000+ одновременных запросов, где возникают узкие места (база данных, кеширование, API). Настроить мониторинг метрик (CPU, RAM, response time) и автоматическое масштабирование серверов при пиковой нагрузке. Подготовить отчет с рекомендациями по оптимизации: где добавить кеширование, какие запросы нужно переписать, как улучшить архитектуру.",
        currentProgress: 8
    }
];